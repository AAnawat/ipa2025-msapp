name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: [self.hosted, Linux, X64]
    environment: production
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create environments
        run: |
          mkdir environments
          {
            echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}"
            echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}"
          } > ./environments/database.env
          {
            echo "MONGO_URI=${{ secrets.MONGO_URI }}"
            echo "DB_NAME=${{ secrets.DB_NAME }}"
          } > ./environments/info.env
          {
            echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}"
            echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}"
          } > ./environments/rabbitmq.env

      - name: Up (pull from Hub, no build on prod)
        run: |
          docker compose -f docker-compose.yaml -f docker-compose.prod.yaml up -d --pull always --no-build
          docker compose ps
